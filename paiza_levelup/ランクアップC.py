# 標準入力から半角スペース区切りで変数に代入
# コンソールに半角区切りで値を入力することで、変数を代入できる
a,b,c = input().split()
# なお、半角スペース以外で区切りたい場合はsplitメソッドの引数に指定する
# 以下の例だと入力値を"+"で区切って入力することができる。
a,b,c = input().split("+")


# 任意の文字列を切り出す
# 開始インデックスと終了インデックスをコロン(:)でつなげて指定することで、文字列を切り出せる
# 以下の例では、hogeにはtの1文字目と2文字目が入り、fugaにはtの3文字目以降が全て入る
t = input()
hoge = t[0:2]
fuga = t[3:]
print(hoge)
print(fuga)

# 実行結果(入力値 abcdefg)
# ab
# defg


# 特定の文字列の出現回数を数える
# 以下の例では入力された文字列のなかに"<"が何文字含まれているかカウントしています。
hoge = input()
answer = 0
# count関数で変数hogeに<が何文字含まれているか数える
answer += hoge.count("<")
print(answer)

# 実行結果(入力値 a<<b<c<d<e<f)
# 6


# 複数の変数を数値で入力したい場合
#　以下のようにして、input().split()で取得したstr型リストの要素をにint型に変換します。
a,b = (int(x) for x in input().split())
print(a+b)

# 実行結果(入力値 "1 3")
# 4


# mapを用いた処理
# map関数は引数に map(処理内容,繰り返し処理ができるもの)　という引数を取る。
# 下記の処理では半角スペース区切りで入力した値をstr型からint型に変換している。
a,b = map(int,input().split())
print(a,b)

# 実行結果(入力値 1 2)
# [1,2]


# 配列に数値を代入
#　下記の処理では入力を半角スペースで区切る→int型に変換→arrという配列を作っている
arr = list(map(int,input().split()))
print(arr)

# 実行結果(入力値 "1 2 3 4 5")
# [1, 2, 3, 4, 5]

# リスト内包表記 配列Mの中で30以下の数値を配列Nにして作成
M = [23, 89, 76, 13]
N = [i for i in M if i <= 30]

# リストの前に * を書くことで、リストを、その要素を文字列にして羅列したものに変更することができます。
print(*[8 * i for i in range(1, 10)])

# 入力例　12:34
S = input()
h = int(S[:2])
m = int(S[3:])

print(h)
print(m)
# XX:XX というフォーマットから時と分を取り出します。これには文字列のスライスを使います。S[a:b] で S の a 文字目から (b-1) 文字目までを切り取った部分文字列が取得できます
# （この際、「 n 文字目」というのは 0 文字目から数えていることに注意してください）。たとえば "paiza"[1:3]は ai です。
# S[a:], S[:b] などとすると、それぞれ、a 番目から最後まで、最初から (b-1) 番目までの部分文字列を取得できます。
# よって、S[:2] とすれば S の時の部分が、S[3:] とすれば S の分の部分が取り出せます。
# int関数 は 0埋め を無視して数字列を整数に変換するので、0埋め を削除するのに使えます。

# float型を四捨五入する　..round関数
round(100.567)
# 小数第一位を四捨五入
round(100.567, 1)
# 小数第二位を四捨五入



# 全ての条件が当てはまらない時の制御構文
c = [input() for i in range(a)]
found = False
for i in c:
    if b in i:
        found = True
        print(i)

if not found:
    print("None")
