"""
n人の得点がそれぞれ与えられるので、1番目の人が最も得点が高くなるようにするには
あと何点必要であるか、出力をする
4
5,15,2,10  => 11
"""
n = int(input())
a = list(map(int,input().split()))

m = 0
for i in range(1,n):
    m = max(m,a[i])

print(max(0,m+1-a[0]))#ここで0を入れないと１番目の人がすでに
                      #1番高い得点であった場合負の数を出力してしまう


"""X が最強であるための必要条件は、「誰かが X より強い」という情報が
存在しないことです。 この必要条件を満たすとき、X は最強である可能性があります。
全員が最強候補である状態から始めて、誰かより弱いことが判明した人を
候補から取り除いていき、最後に残るのが1人であるかどうかを
確かめることで問題を解くことができます。"""

n,m = map(int,input().split())

s = set(range(1,n+1)) #最初は全ての人が最強と仮定

for i in range(m):
    win,lose = map(int,input().split())
    s.discard(lose) #比較して弱い人を集合から削除

print(-1 if len(s) != 1 else s.pop()) #.pop()削除したのものを返す
